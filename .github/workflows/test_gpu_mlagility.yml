# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test MLAgility Using Self-Hosted Azure GPU

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted
    env:
      MLAGILITY_DEBUG: True
      MLAGILITY_TRACEBACK: True
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: mla
          python-version: ${{ matrix.python-version }}
      - name: Install Docker
        shell: bash -el {0}
        run: |
          sudo mkdir -p /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
          "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo chmod 666 /var/run/docker.sock
      - name: Install dependencies
        shell: bash -el {0}
        run: |
          python -m pip install --upgrade pip
          conda install pylint
          if [ -f setup.py ]; then pip install -e .; fi
          pip install transformers
          python -m pip check
      - name: Test with unittest
        shell: bash -el {0}
        run: |
          # E2E tests
          rm -rf ~/.cache/mlagility
          python test/gpu.py